// My amazing program!!
1000 0000 0011 0010 //LDA 50  	ACC = 4
0000 0000 0011 0011 //ADD 51  	ACC = 4 + (-4) = 0
1110 0000 0000 0101 //JZ 5    	if (ACC == 0) jump to LABEL

0010 0000 0011 0100 //SUB 52  	ACC 
0100 0000 0011 0101 //AND 53	ACC

1000 0000 0110 1110 //LDA 110 	ACC = -1 LABEL
0000 0000 0110 0100 //ADD 100 	ACC = 1
0000 0000 0110 0101 //ADD 101 	ACC = 3
0000 0000 0110 0110 //ADD 102 	ACC = 6
0000 0000 0110 0111 //ADD 103 	ACC = 10
0000 0000 0110 1000 //ADD 104 	ACC = 15
0000 0000 0110 1001 //ADD 105 	ACC = 21
0000 0000 0110 1010 //ADD 106 	ACC = 28
0000 0000 0110 1011 //ADD 107 	ACC = 36
0000 0000 0110 1100 //ADD 108 	ACC = 45
0000 0000 0110 1101 //ADD 109 	ACC = 55
0110 0000 0000 0000 //NOT     	ACC = -56
1010 0000 0111 1000 //STA 120 	MEM[120] = -56

// The above instruction in hex
8032
0033
E005
2034
4035
806E
0064
0065
0066
0067
0068
0069
006A
006B
006C
006D
6000
A078


// Memory values:

0 - 17 ==> instructions

50 => 4	   (16x0004)
51 => -4   (16xFFFC)
52 => 50   (16x0032)
53 => 00   (16x0000)

100 => 1   (16x0001)
101 => 2   (16x0002)
102 => 3   (16x0003)
103 => 4   (16x0004)
104 => 5   (16x0005)
105 => 6   (16x0006)
106 => 7   (16x0007)
107 => 8   (16x0008)
108 => 9   (16x0009)
109 => 10  (16x000A)
110 = -1   (16xFFFF)

120 = x